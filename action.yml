name: 'Compile and publish all LaTeX'
description: 'Checkout, compile LaTeX, compute a version, and deploy on GitHub in one shot.'
inputs:
  token:  # github token
    description: 'Github token for deployment.'
    required: true
  publish-enable:
    description: 'Whether the results should be deployed on GitHub. Defaults to true.'
    required: false
    default: true
  overwrite-release:
    description: 'Whether the results should overwrite previous release. Defaults to true.'
    required: false
    default: true
  texfilter: 
    description: 'Filter for LaTex files'
    required: false
    default: *.tex

runs:
  using: "composite"
  steps:
    #- name: Make ImageMagik permissive
    #  shell: bash
    #  run: sudo sed -i 's/rights=".*"/rights="all"/' /etc/ImageMagick-6/policy.xml
    # Checkout the repository
    - name: Checkout
      uses: danysk/action-checkout@0.2.3
    - name: Compile LaTeX
      uses: metaphori/compile-latex-action@master
      with:
        texfilter: ${{ inputs.texfilter }}
    #- name: Autotag
    #  uses: DanySK/semver-autotag-action@0.1.0
    #  if: inputs.overwrite-release == 'false'
    - name: Deploy
      if: inputs.publish-enable == 'true'
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      shell: bash
      run: |
        if [[ -z $GITHUB_TOKEN ]]; then
          echo "No token set, cannot deploy"
          false
        else
          if [[ $GITHUB_REF == 'refs/heads/master'
              || $GITHUB_REF == 'refs/heads/main'
              || $GITHUB_REF == 'refs/heads/default'
              || $GITHUB_REF == "refs/tags"*
          ]]; then
            TAG=1.0 # $(git describe --tags --exact-match HEAD)
            hub release create -m "$(git tag -l --format='%(contents)' "$TAG")" "$TAG" || true
            while IFS= read -r file; do
              pdf="${file%.*}.pdf"
              echo "Delivering file $pdf"
              gh release upload "$TAG" "$pdf" --clobber
            done <<< "$LATEX_SUCCESSES"
          else
            echo "Not running deployment from unknown source: $GITHUB_REF"
          fi
        fi
