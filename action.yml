name: 'Compile and publish all LaTeX'
description: 'Checkout, compile LaTeX, compute a version, and deploy on GitHub in one shot.'
inputs:
  token:  # github token
    description: 'Github token for deployment.'
    required: true
  publish-enable:
    description: 'Whether the results should be deployed on GitHub. Defaults to true.'
    required: false
    default: true
  overwrite-release:
    description: 'Whether the results should overwrite previous release. Defaults to true.'
    required: false
    default: true
  texfilter: 
    description: 'Filter for LaTex files'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    #- name: Make ImageMagik permissive
    #  shell: bash
    #  run: sudo sed -i 's/rights=".*"/rights="all"/' /etc/ImageMagick-6/policy.xml
    # Checkout the repository
    - name: Checkout
      uses: danysk/action-checkout@0.2.3
#    - name: Install hub
#      uses: geertvdc/setup-hub@master
#    - name: run hub commands
#      secrets:
#        GITHUB_USER: ${{ secrets.GITHUB_USER }}
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: run hub commands
      shell: bash 
      run: |
        hub release show slides --format "%pr"
        git log --since="$(hub release show slides --format "%pr")" --name-only --pretty=format: | sort | uniq | sed -e 's/.*\///g' | grep -e '.*\.tex' | tr '\n' ','
        export TEXFILTER=$(git log --since="$(hub release show slides --format "%pr")" --name-only --pretty=format: | sort | uniq | sed -e 's/.*\///g' | grep -e '.*\.tex' | tr '\n' ',')
    - name: Compile LaTeX
      uses: metaphori/compile-latex-action@master
      with:
        texfilter: ${{ inputs.texfilter || env.TEXFILTER }}
    #- name: Autotag
    #  uses: DanySK/semver-autotag-action@0.1.0
    #  if: inputs.overwrite-release == 'false'
    - name: Deploy
      if: inputs.publish-enable == 'true'
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      shell: bash
      run: |
        if [[ -z $GITHUB_TOKEN ]]; then
          echo "No token set, cannot deploy"
          false
        else
          if [[ $GITHUB_REF == 'refs/heads/master'
              || $GITHUB_REF == 'refs/heads/main'
              || $GITHUB_REF == 'refs/heads/default'
              || $GITHUB_REF == "refs/tags"*
          ]]; then
            TAG="$(git describe --tags --abbrev=0 HEAD)"
            hub release create -m "$(date -I)" "$TAG" || true
            while IFS= read -r file; do
              pdf="${file%.*}.pdf"
              echo "Delivering file $pdf"
              gh release upload "$TAG" "$pdf" --clobber
            done <<< "$LATEX_SUCCESSES"
          else
            echo "Not running deployment from unknown source: $GITHUB_REF"
          fi
        fi
# tex files which have a corresponding pdf in assets of a release:
#   hub release show <RELEASENAME> --show-downloads | sed -e 's/.*\///g' | grep -e '.*\.pdf' | sed s/pdf/tex/
# date of release publication
#   hub release show <RELEASENAME> --format "%pI" | grep -oE '[0-9]{4}-[0-9]{2}-[0-9]{2}'
# tex files changed since release
#   git log --since="$(hub release show <RELEASENAME> --format "%pr")" --name-only --pretty=format: | sort | uniq